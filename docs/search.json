[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ian’s Website!!",
    "section": "",
    "text": "https://github.com/iannnlee/nm2207\nHello, I’m Ian! I’m currently in my third year as a Business Administration student with a specialisation in finance. I’m excited to be taking NM2207 in Semester 1 of the academic year 2023/2024.\nIn my free time, I’m an avid sports enthusiast, particularly passionate about basketball and football. I proudly support the LA Lakers and enjoy watching their games. I used to enjoy playing basketball as well but I got lazy :)"
  },
  {
    "objectID": "index.html#welcome-to-my-website",
    "href": "index.html#welcome-to-my-website",
    "title": "Ian’s Website!!",
    "section": "",
    "text": "https://github.com/iannnlee/nm2207\nHello, I’m Ian! I’m currently in my third year as a Business Administration student with a specialisation in finance. I’m excited to be taking NM2207 in Semester 1 of the academic year 2023/2024.\nIn my free time, I’m an avid sports enthusiast, particularly passionate about basketball and football. I proudly support the LA Lakers and enjoy watching their games. I used to enjoy playing basketball as well but I got lazy :)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\nlibrary(httr) \nlibrary(jsonlite) \nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()  masks stats::filter()\n✖ purrr::flatten() masks jsonlite::flatten()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nhistoric_state_data_url &lt;- \"https://api.covidactnow.org/v2/states.timeseries.json?apiKey=26928a71337346d6970a520cd5d32d60\"\n raw_data &lt;- GET(historic_state_data_url)\n\n\ndata &lt;- fromJSON(rawToChar(raw_data$content))\n\n\nglimpse(data)\n\nRows: 53\nColumns: 25\n$ fips                           &lt;chr&gt; \"02\", \"01\", \"05\", \"04\", \"06\", \"08\", \"09…\n$ country                        &lt;chr&gt; \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US…\n$ state                          &lt;chr&gt; \"AK\", \"AL\", \"AR\", \"AZ\", \"CA\", \"CO\", \"CT…\n$ county                         &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ hsa                            &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ hsaName                        &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ level                          &lt;chr&gt; \"state\", \"state\", \"state\", \"state\", \"st…\n$ lat                            &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ locationId                     &lt;chr&gt; \"iso1:us#iso2:us-ak\", \"iso1:us#iso2:us-…\n$ long                           &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ population                     &lt;int&gt; 731545, 4903185, 3017804, 7278717, 3951…\n$ hsaPopulation                  &lt;int&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ metrics                        &lt;df[,14]&gt; &lt;data.frame[26 x 14]&gt;\n$ riskLevels                     &lt;df[,6]&gt; &lt;data.frame[26 x 6]&gt;\n$ cdcTransmissionLevel           &lt;int&gt; 3, 4, 3, 3, 1, 4, 4, 1, 4, 4, 2, 3,…\n$ communityLevels                &lt;df[,2]&gt; &lt;data.frame[26 x 2]&gt;\n$ actuals                        &lt;df[,19]&gt; &lt;data.frame[26 x 19]&gt;\n$ annotations                    &lt;df[,30]&gt; &lt;data.frame[26 x 30]&gt;\n$ lastUpdatedDate                &lt;chr&gt; \"2023-11-01\", \"2023-11-01\", \"2023-11…\n$ url                            &lt;chr&gt; \"https://covidactnow.org/us/alaska-ak\",…\n$ metricsTimeseries              &lt;list&gt; [&lt;data.frame[1336 x 14]&gt;], [&lt;data.fr…\n$ actualsTimeseries              &lt;list&gt; [&lt;data.frame[1336 x 20]&gt;], [&lt;data.f…\n$ riskLevelsTimeseries           &lt;list&gt; [&lt;data.frame[1336 x 3]&gt;], [&lt;data.fr…\n$ cdcTransmissionLevelTimeseries &lt;list&gt; [&lt;data.frame[1336 x 2]&gt;], [&lt;data.frame[…\n$ communityLevelsTimeseries      &lt;list&gt; [&lt;data.frame[1336 x 3]&gt;], [&lt;data.frame[…\n\n\n\ntime_series &lt;- data %&gt;%\nunnest(actualsTimeseries)\n\n\n# Creating a new dataframe with needed data\n# Save date\ntime_series_transmission &lt;- tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"CA\")]]$date)\n# Transmission levels in each state\ntime_series_transmission$Alaska &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"AK\")]]$ cdcTransmissionLevel\ntime_series_transmission$California &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"CA\")]]$cdcTransmissionLevel\ntime_series_transmission$New_Jersey &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"NJ\")]]$cdcTransmissionLevel\ntime_series_transmission$Tennessee &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"TN\")]]$cdcTransmissionLevel\ntime_series_transmission$District_of_Columbia &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"DC\")]]$cdcTransmissionLevel\n print(head(time_series_transmission))\n\n# A tibble: 6 × 6\n  Date       Alaska California New_Jersey Tennessee District_of_Columbia\n  &lt;chr&gt;       &lt;int&gt;      &lt;int&gt;      &lt;int&gt;     &lt;int&gt;                &lt;int&gt;\n1 2020-03-01      0          0          0         0                    0\n2 2020-03-02      0          0          0         0                    0\n3 2020-03-03      0          0          0         0                    0\n4 2020-03-04      0          0          0         0                    0\n5 2020-03-05      0          0          0         0                    0\n6 2020-03-06      0          0          0         0                    0\n\n\n\n # New data-frame with dates\ntime_series_cases &lt;- list(Alaska = time_series %&gt;% filter(state==\"AK\") %&gt;% select(date,cases))\n# Cases of each state\ntime_series_cases$California &lt;- time_series %&gt;% filter(state==\"CA\") %&gt;% select(date,cases) \ntime_series_cases$New_Jersey &lt;- time_series %&gt;% filter(state==\"NJ\") %&gt;% select(date,cases) \ntime_series_cases$Tennessee &lt;- time_series %&gt;% filter(state==\"TN\") %&gt;% select(date,cases) \ntime_series_cases$District_of_Columbia &lt;- time_series %&gt;% filter(state==\"DC\") %&gt;% select(date,cases)\n\n\nggplot(data, aes(x=state,y=population)) + geom_bar(stat=\"identity\") +labs(x=\"States\",y=\"Population\") + theme_bw()\n\n\n\n\n\n ggplot(data, aes(x=state,y=(data$actuals$cases/population))) + geom_bar(stat=\"identity\") + labs(x=\"States\",y=\"Infected (%)\")+theme_bw()\n\n\n\n\n\n time_series_transmission[seq(1,1300,by=100),]%&gt;%\n   pivot_longer(cols=Alaska:District_of_Columbia,names_to=\"Countries\",values_to=\"Transmission\") %&gt;%\n ggplot(aes(x=Date,y=Transmission,colour=Countries,group=Countries)) +\n geom_point(show.legend=TRUE) + labs(x=\"Date\",y=\"Transmission Level\")+theme_bw()\n\n\n\n\n\ndata_to_plot &lt;- tibble(Date_Alaska = time_series_cases$Alaska$date[seq(1,1300,by=100)],\n                        Cases_Alaska= time_series_cases$Alaska$cases[seq(1,1300,by=100)],Date_California = time_series_cases$California$date[seq(1,1300,by=100)],\nCases_California = time_series_cases$California$cases[seq(1,1300,by=100)],\nDate_New_Jersey = time_series_cases$New_Jersey$date[seq(1,1300,by=100)],\nCases_New_Jersey = time_series_cases$New_Jersey$cases[seq(1,1300,by=100)],\nDate_Tennessee = time_series_cases$Tennessee$date[seq(1,1300,by=100)],\nCases_Tennessee = time_series_cases$Tennessee$cases[seq(1,1300,by=100)],\nDate_District_of_Columbia = time_series_cases$District_of_Columbia$date[seq(1,1300,by=100)],Cases_District_of_Columbia = time_series_cases$District_of_Columbia$cases[seq(1,1300,by=100)])\n\ndata_to_plot\n\n# A tibble: 13 × 10\n   Date_Alaska Cases_Alaska Date_California Cases_California Date_New_Jersey\n   &lt;chr&gt;              &lt;int&gt; &lt;chr&gt;                      &lt;int&gt; &lt;chr&gt;          \n 1 2020-03-01            NA 2020-01-25                     1 2020-03-01     \n 2 2020-06-09           620 2020-05-04                 56333 2020-06-09     \n 3 2020-09-17          7413 2020-08-12                595097 2020-09-17     \n 4 2020-12-26         45247 2020-11-20               1096427 2020-12-26     \n 5 2021-04-05         63486 2021-02-28               3569578 2021-04-05     \n 6 2021-07-14         71539 2021-06-08               3798225 2021-07-14     \n 7 2021-10-22        132393 2021-09-16               4629146 2021-10-22     \n 8 2022-01-30        211117 2021-12-25               5291605 2022-01-30     \n 9 2022-05-10        252847 2022-04-04               9110544 2022-05-10     \n10 2022-08-18        289203 2022-07-13              10365785 2022-08-18     \n11 2022-11-26        299841 2022-10-21              11338846 2022-11-26     \n12 2023-03-06        307377 2023-01-29              11980312 2023-03-06     \n13 2023-06-14            NA 2023-05-09              12242634 2023-06-14     \n# ℹ 5 more variables: Cases_New_Jersey &lt;int&gt;, Date_Tennessee &lt;chr&gt;,\n#   Cases_Tennessee &lt;int&gt;, Date_District_of_Columbia &lt;chr&gt;,\n#   Cases_District_of_Columbia &lt;int&gt;\n\n\n\nlibrary(cowplot)\n\n\nAttaching package: 'cowplot'\n\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n\n\n\nfig1&lt;- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +\n geom_point() + labs(x=\"Date\",y=\"Cases\", title=\"Alaska\") + theme_bw()\n fig2&lt;- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +\n geom_point() + labs(x=\"Date\",y=\"Cases\", title=\"California\") + theme_bw()\n fig3&lt;- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +\n geom_point() + labs(x=\"Date\",y=\"Cases\", title=\"New Jersey\") + theme_bw()\n fig4&lt;- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +\n geom_point() + labs(x=\"Date\",y=\"Cases\", title=\"Tennessee\") + theme_bw()\n fig5&lt;- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +\n geom_point() + labs(x=\"Date\",y=\"Cases\", title=\"District of Columbia\") + theme_bw()\n \n plot_grid(fig1 + theme(legend.justification = c(0,1)),\n           fig2 + theme(legend.justification = c(1,0)),\n           fig3 + theme(legend.justification = c(0,1)),\n           fig4 + theme(legend.justification = c(1,0)),\n           fig5 + theme(legend.justification = c(0,1)),\n           align = \"v\", axis = \"lr\", nrow=3,\n           ncol = 2,labels = LETTERS[1:5],\n           rel_heights = c(1,2))\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\nRemoved 2 rows containing missing values (`geom_point()`).\nRemoved 2 rows containing missing values (`geom_point()`).\nRemoved 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "week 11 challenge.html",
    "href": "week 11 challenge.html",
    "title": "wk11 challenge",
    "section": "",
    "text": "library(httr) \nlibrary(jsonlite) \nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()  masks stats::filter()\n✖ purrr::flatten() masks jsonlite::flatten()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nhistoric_state_data_url &lt;- \"https://api.covidactnow.org/v2/states.timeseries.json?apiKey=26928a71337346d6970a520cd5d32d60\"\n raw_data &lt;- GET(historic_state_data_url)\n\n\ndata &lt;- fromJSON(rawToChar(raw_data$content))\n\n\nglimpse(data)\n\nRows: 53\nColumns: 25\n$ fips                           &lt;chr&gt; \"02\", \"01\", \"05\", \"04\", \"06\", \"08\", \"09…\n$ country                        &lt;chr&gt; \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US…\n$ state                          &lt;chr&gt; \"AK\", \"AL\", \"AR\", \"AZ\", \"CA\", \"CO\", \"CT…\n$ county                         &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ hsa                            &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ hsaName                        &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ level                          &lt;chr&gt; \"state\", \"state\", \"state\", \"state\", \"st…\n$ lat                            &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ locationId                     &lt;chr&gt; \"iso1:us#iso2:us-ak\", \"iso1:us#iso2:us-…\n$ long                           &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ population                     &lt;int&gt; 731545, 4903185, 3017804, 7278717, 3951…\n$ hsaPopulation                  &lt;int&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ metrics                        &lt;df[,14]&gt; &lt;data.frame[26 x 14]&gt;\n$ riskLevels                     &lt;df[,6]&gt; &lt;data.frame[26 x 6]&gt;\n$ cdcTransmissionLevel           &lt;int&gt; 3, 4, 3, 3, 1, 4, 4, 1, 4, 4, 2, 3,…\n$ communityLevels                &lt;df[,2]&gt; &lt;data.frame[26 x 2]&gt;\n$ actuals                        &lt;df[,19]&gt; &lt;data.frame[26 x 19]&gt;\n$ annotations                    &lt;df[,30]&gt; &lt;data.frame[26 x 30]&gt;\n$ lastUpdatedDate                &lt;chr&gt; \"2023-11-01\", \"2023-11-01\", \"2023-11…\n$ url                            &lt;chr&gt; \"https://covidactnow.org/us/alaska-ak\",…\n$ metricsTimeseries              &lt;list&gt; [&lt;data.frame[1336 x 14]&gt;], [&lt;data.fr…\n$ actualsTimeseries              &lt;list&gt; [&lt;data.frame[1336 x 20]&gt;], [&lt;data.f…\n$ riskLevelsTimeseries           &lt;list&gt; [&lt;data.frame[1336 x 3]&gt;], [&lt;data.fr…\n$ cdcTransmissionLevelTimeseries &lt;list&gt; [&lt;data.frame[1336 x 2]&gt;], [&lt;data.frame[…\n$ communityLevelsTimeseries      &lt;list&gt; [&lt;data.frame[1336 x 3]&gt;], [&lt;data.frame[…\n\n\n\ntime_series &lt;- data %&gt;%\nunnest(actualsTimeseries)\n\n\n# Creating a new dataframe with needed data\n# Save date\ntime_series_transmission &lt;- tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"CA\")]]$date)\n# Transmission levels in each state\ntime_series_transmission$Alaska &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"AK\")]]$ cdcTransmissionLevel\ntime_series_transmission$California &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"CA\")]]$cdcTransmissionLevel\ntime_series_transmission$New_Jersey &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"NJ\")]]$cdcTransmissionLevel\ntime_series_transmission$Tennessee &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"TN\")]]$cdcTransmissionLevel\ntime_series_transmission$District_of_Columbia &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"DC\")]]$cdcTransmissionLevel\n print(head(time_series_transmission))\n\n# A tibble: 6 × 6\n  Date       Alaska California New_Jersey Tennessee District_of_Columbia\n  &lt;chr&gt;       &lt;int&gt;      &lt;int&gt;      &lt;int&gt;     &lt;int&gt;                &lt;int&gt;\n1 2020-03-01      0          0          0         0                    0\n2 2020-03-02      0          0          0         0                    0\n3 2020-03-03      0          0          0         0                    0\n4 2020-03-04      0          0          0         0                    0\n5 2020-03-05      0          0          0         0                    0\n6 2020-03-06      0          0          0         0                    0\n\n\n\n # New data-frame with dates\ntime_series_cases &lt;- list(Alaska = time_series %&gt;% filter(state==\"AK\") %&gt;% select(date,cases))\n# Cases of each state\ntime_series_cases$California &lt;- time_series %&gt;% filter(state==\"CA\") %&gt;% select(date,cases) \ntime_series_cases$New_Jersey &lt;- time_series %&gt;% filter(state==\"NJ\") %&gt;% select(date,cases) \ntime_series_cases$Tennessee &lt;- time_series %&gt;% filter(state==\"TN\") %&gt;% select(date,cases) \ntime_series_cases$District_of_Columbia &lt;- time_series %&gt;% filter(state==\"DC\") %&gt;% select(date,cases)\n\n\nggplot(data, aes(x=state,y=population)) + geom_bar(stat=\"identity\") +labs(x=\"States\",y=\"Population\") + theme_bw()"
  },
  {
    "objectID": "week11challenge.html",
    "href": "week11challenge.html",
    "title": "wk11 challenge",
    "section": "",
    "text": "library(httr)\nlibrary(jsonlite) \nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()  masks stats::filter()\n✖ purrr::flatten() masks jsonlite::flatten()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nhistoric_state_data_url &lt;- \"https://api.covidactnow.org/v2/states.timeseries.json?apiKey=26928a71337346d6970a520cd5d32d60\"\n raw_data &lt;- GET(historic_state_data_url)\n\n\ndata &lt;- fromJSON(rawToChar(raw_data$content))\n\n\nglimpse(data)\n\nRows: 53\nColumns: 25\n$ fips                           &lt;chr&gt; \"02\", \"01\", \"05\", \"04\", \"06\", \"08\", \"09…\n$ country                        &lt;chr&gt; \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US…\n$ state                          &lt;chr&gt; \"AK\", \"AL\", \"AR\", \"AZ\", \"CA\", \"CO\", \"CT…\n$ county                         &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ hsa                            &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ hsaName                        &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ level                          &lt;chr&gt; \"state\", \"state\", \"state\", \"state\", \"st…\n$ lat                            &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ locationId                     &lt;chr&gt; \"iso1:us#iso2:us-ak\", \"iso1:us#iso2:us-…\n$ long                           &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ population                     &lt;int&gt; 731545, 4903185, 3017804, 7278717, 3951…\n$ hsaPopulation                  &lt;int&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ metrics                        &lt;df[,14]&gt; &lt;data.frame[26 x 14]&gt;\n$ riskLevels                     &lt;df[,6]&gt; &lt;data.frame[26 x 6]&gt;\n$ cdcTransmissionLevel           &lt;int&gt; 3, 4, 3, 3, 1, 4, 4, 1, 4, 4, 2, 3,…\n$ communityLevels                &lt;df[,2]&gt; &lt;data.frame[26 x 2]&gt;\n$ actuals                        &lt;df[,19]&gt; &lt;data.frame[26 x 19]&gt;\n$ annotations                    &lt;df[,30]&gt; &lt;data.frame[26 x 30]&gt;\n$ lastUpdatedDate                &lt;chr&gt; \"2023-11-01\", \"2023-11-01\", \"2023-11…\n$ url                            &lt;chr&gt; \"https://covidactnow.org/us/alaska-ak\",…\n$ metricsTimeseries              &lt;list&gt; [&lt;data.frame[1336 x 14]&gt;], [&lt;data.fr…\n$ actualsTimeseries              &lt;list&gt; [&lt;data.frame[1336 x 20]&gt;], [&lt;data.f…\n$ riskLevelsTimeseries           &lt;list&gt; [&lt;data.frame[1336 x 3]&gt;], [&lt;data.fr…\n$ cdcTransmissionLevelTimeseries &lt;list&gt; [&lt;data.frame[1336 x 2]&gt;], [&lt;data.frame[…\n$ communityLevelsTimeseries      &lt;list&gt; [&lt;data.frame[1336 x 3]&gt;], [&lt;data.frame[…\n\n\n\ntime_series &lt;- data %&gt;%\nunnest(actualsTimeseries)\n\n\n# Creating a new dataframe with needed data\n# Save date\ntime_series_transmission &lt;- tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"CA\")]]$date)\n# Transmission levels in each state\ntime_series_transmission$Alaska &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"AK\")]]$ cdcTransmissionLevel\ntime_series_transmission$California &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"CA\")]]$cdcTransmissionLevel\ntime_series_transmission$New_Jersey &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"NJ\")]]$cdcTransmissionLevel\ntime_series_transmission$Tennessee &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"TN\")]]$cdcTransmissionLevel\ntime_series_transmission$District_of_Columbia &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"DC\")]]$cdcTransmissionLevel\n print(head(time_series_transmission))\n\n# A tibble: 6 × 6\n  Date       Alaska California New_Jersey Tennessee District_of_Columbia\n  &lt;chr&gt;       &lt;int&gt;      &lt;int&gt;      &lt;int&gt;     &lt;int&gt;                &lt;int&gt;\n1 2020-03-01      0          0          0         0                    0\n2 2020-03-02      0          0          0         0                    0\n3 2020-03-03      0          0          0         0                    0\n4 2020-03-04      0          0          0         0                    0\n5 2020-03-05      0          0          0         0                    0\n6 2020-03-06      0          0          0         0                    0\n\n\n\n# New data-frame with dates\ntime_series_cases &lt;- list(Alaska = time_series %&gt;% filter(state==\"AK\") %&gt;% select(date,cases))\n# Cases of each state\ntime_series_cases$California &lt;- time_series %&gt;% filter(state==\"CA\") %&gt;% select(date,cases) \ntime_series_cases$New_Jersey &lt;- time_series %&gt;% filter(state==\"NJ\") %&gt;% select(date,cases) \ntime_series_cases$Tennessee &lt;- time_series %&gt;% filter(state==\"TN\") %&gt;% select(date,cases) \ntime_series_cases$District_of_Columbia &lt;- time_series %&gt;% filter(state==\"DC\") %&gt;% select(date,cases)\n\n\nggplot(data, aes(x=state,y=population)) + geom_bar(stat=\"identity\") +labs(x=\"States\",y=\"Population\") + theme_bw()\n\n\n\n\n\nggplot(data, aes(x=state,y=(data$actuals$cases/population))) + geom_bar(stat=\"identity\") + labs(x=\"States\",y=\"Infected (%)\")+theme_bw()\n\n\n\n\n\ntime_series_transmission[seq(1,1300,by=100),]%&gt;%\n   pivot_longer(cols=Alaska:District_of_Columbia,names_to=\"Countries\",values_to=\"Transmission\") %&gt;%\n ggplot(aes(x=Date,y=Transmission,colour=Countries,group=Countries)) +\n geom_point(show.legend=TRUE) + labs(x=\"Date\",y=\"Transmission Level\")+theme_bw()\n\n\n\n\n\ndata_to_plot &lt;- tibble(Date_Alaska = time_series_cases$Alaska$date[seq(1,1300,by=100)],\n                        Cases_Alaska= time_series_cases$Alaska$cases[seq(1,1300,by=100)],Date_California = time_series_cases$California$date[seq(1,1300,by=100)],\nCases_California = time_series_cases$California$cases[seq(1,1300,by=100)],\nDate_New_Jersey = time_series_cases$New_Jersey$date[seq(1,1300,by=100)],\nCases_New_Jersey = time_series_cases$New_Jersey$cases[seq(1,1300,by=100)],\nDate_Tennessee = time_series_cases$Tennessee$date[seq(1,1300,by=100)],\nCases_Tennessee = time_series_cases$Tennessee$cases[seq(1,1300,by=100)],\nDate_District_of_Columbia = time_series_cases$District_of_Columbia$date[seq(1,1300,by=100)],Cases_District_of_Columbia = time_series_cases$District_of_Columbia$cases[seq(1,1300,by=100)])\n\ndata_to_plot\n\n# A tibble: 13 × 10\n   Date_Alaska Cases_Alaska Date_California Cases_California Date_New_Jersey\n   &lt;chr&gt;              &lt;int&gt; &lt;chr&gt;                      &lt;int&gt; &lt;chr&gt;          \n 1 2020-03-01            NA 2020-01-25                     1 2020-03-01     \n 2 2020-06-09           620 2020-05-04                 56333 2020-06-09     \n 3 2020-09-17          7413 2020-08-12                595097 2020-09-17     \n 4 2020-12-26         45247 2020-11-20               1096427 2020-12-26     \n 5 2021-04-05         63486 2021-02-28               3569578 2021-04-05     \n 6 2021-07-14         71539 2021-06-08               3798225 2021-07-14     \n 7 2021-10-22        132393 2021-09-16               4629146 2021-10-22     \n 8 2022-01-30        211117 2021-12-25               5291605 2022-01-30     \n 9 2022-05-10        252847 2022-04-04               9110544 2022-05-10     \n10 2022-08-18        289203 2022-07-13              10365785 2022-08-18     \n11 2022-11-26        299841 2022-10-21              11338846 2022-11-26     \n12 2023-03-06        307377 2023-01-29              11980312 2023-03-06     \n13 2023-06-14            NA 2023-05-09              12242634 2023-06-14     \n# ℹ 5 more variables: Cases_New_Jersey &lt;int&gt;, Date_Tennessee &lt;chr&gt;,\n#   Cases_Tennessee &lt;int&gt;, Date_District_of_Columbia &lt;chr&gt;,\n#   Cases_District_of_Columbia &lt;int&gt;\n\n\n\nlibrary(cowplot)\n\n\nAttaching package: 'cowplot'\n\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n\n\n\nfig1&lt;- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +\n geom_point() + labs(x=\"Date\",y=\"Cases\", title=\"Alaska\") + theme_bw()\n fig2&lt;- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +\n geom_point() + labs(x=\"Date\",y=\"Cases\", title=\"California\") + theme_bw()\n fig3&lt;- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +\n geom_point() + labs(x=\"Date\",y=\"Cases\", title=\"New Jersey\") + theme_bw()\n fig4&lt;- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +\n geom_point() + labs(x=\"Date\",y=\"Cases\", title=\"Tennessee\") + theme_bw()\n fig5&lt;- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +\n geom_point() + labs(x=\"Date\",y=\"Cases\", title=\"District of Columbia\") + theme_bw()\n \n plot_grid(fig1 + theme(legend.justification = c(0,1)),\n           fig2 + theme(legend.justification = c(1,0)),\n           fig3 + theme(legend.justification = c(0,1)),\n           fig4 + theme(legend.justification = c(1,0)),\n           fig5 + theme(legend.justification = c(0,1)),\n           align = \"v\", axis = \"lr\", nrow=3,\n           ncol = 2,labels = LETTERS[1:5],\n           rel_heights = c(1,2))\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\nRemoved 2 rows containing missing values (`geom_point()`).\nRemoved 2 rows containing missing values (`geom_point()`).\nRemoved 2 rows containing missing values (`geom_point()`)."
  }
]