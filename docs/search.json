[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ian’s Website!!",
    "section": "",
    "text": "https://github.com/iannnlee/nm2207\nHello, I’m Ian! I’m currently in my third year as a Business Administration student with a specialisation in finance. I’m excited to be taking NM2207 in Semester 1 of the academic year 2023/2024.\nIn my free time, I’m an avid sports enthusiast, particularly passionate about basketball and football. I proudly support the LA Lakers and enjoy watching their games. I used to enjoy playing basketball as well but I got lazy :)"
  },
  {
    "objectID": "index.html#welcome-to-my-website",
    "href": "index.html#welcome-to-my-website",
    "title": "Ian’s Website!!",
    "section": "",
    "text": "https://github.com/iannnlee/nm2207\nHello, I’m Ian! I’m currently in my third year as a Business Administration student with a specialisation in finance. I’m excited to be taking NM2207 in Semester 1 of the academic year 2023/2024.\nIn my free time, I’m an avid sports enthusiast, particularly passionate about basketball and football. I proudly support the LA Lakers and enjoy watching their games. I used to enjoy playing basketball as well but I got lazy :)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Datastory",
    "section": "",
    "text": "Why are Singaporeans single???\n\n\n\nplaceholder for single singaporean image\n\n\n\n\n\n\n\n\n\n\n\n\nThis code: clean data 3, 10 year window 2013-2022 30-39 yr old"
  },
  {
    "objectID": "week 11 challenge.html",
    "href": "week 11 challenge.html",
    "title": "wk11 challenge",
    "section": "",
    "text": "library(httr) \nlibrary(jsonlite) \nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()  masks stats::filter()\n✖ purrr::flatten() masks jsonlite::flatten()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nhistoric_state_data_url &lt;- \"https://api.covidactnow.org/v2/states.timeseries.json?apiKey=26928a71337346d6970a520cd5d32d60\"\n raw_data &lt;- GET(historic_state_data_url)\n\n\ndata &lt;- fromJSON(rawToChar(raw_data$content))\n\n\nglimpse(data)\n\nRows: 53\nColumns: 25\n$ fips                           &lt;chr&gt; \"02\", \"01\", \"05\", \"04\", \"06\", \"08\", \"09…\n$ country                        &lt;chr&gt; \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US…\n$ state                          &lt;chr&gt; \"AK\", \"AL\", \"AR\", \"AZ\", \"CA\", \"CO\", \"CT…\n$ county                         &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ hsa                            &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ hsaName                        &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ level                          &lt;chr&gt; \"state\", \"state\", \"state\", \"state\", \"st…\n$ lat                            &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ locationId                     &lt;chr&gt; \"iso1:us#iso2:us-ak\", \"iso1:us#iso2:us-…\n$ long                           &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ population                     &lt;int&gt; 731545, 4903185, 3017804, 7278717, 3951…\n$ hsaPopulation                  &lt;int&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ metrics                        &lt;df[,14]&gt; &lt;data.frame[26 x 14]&gt;\n$ riskLevels                     &lt;df[,6]&gt; &lt;data.frame[26 x 6]&gt;\n$ cdcTransmissionLevel           &lt;int&gt; 3, 4, 3, 3, 1, 4, 4, 1, 4, 4, 2, 3,…\n$ communityLevels                &lt;df[,2]&gt; &lt;data.frame[26 x 2]&gt;\n$ actuals                        &lt;df[,19]&gt; &lt;data.frame[26 x 19]&gt;\n$ annotations                    &lt;df[,30]&gt; &lt;data.frame[26 x 30]&gt;\n$ lastUpdatedDate                &lt;chr&gt; \"2023-11-01\", \"2023-11-01\", \"2023-11…\n$ url                            &lt;chr&gt; \"https://covidactnow.org/us/alaska-ak\",…\n$ metricsTimeseries              &lt;list&gt; [&lt;data.frame[1336 x 14]&gt;], [&lt;data.fr…\n$ actualsTimeseries              &lt;list&gt; [&lt;data.frame[1336 x 20]&gt;], [&lt;data.f…\n$ riskLevelsTimeseries           &lt;list&gt; [&lt;data.frame[1336 x 3]&gt;], [&lt;data.fr…\n$ cdcTransmissionLevelTimeseries &lt;list&gt; [&lt;data.frame[1336 x 2]&gt;], [&lt;data.frame[…\n$ communityLevelsTimeseries      &lt;list&gt; [&lt;data.frame[1336 x 3]&gt;], [&lt;data.frame[…\n\n\n\ntime_series &lt;- data %&gt;%\nunnest(actualsTimeseries)\n\n\n# Creating a new dataframe with needed data\n# Save date\ntime_series_transmission &lt;- tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"CA\")]]$date)\n# Transmission levels in each state\ntime_series_transmission$Alaska &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"AK\")]]$ cdcTransmissionLevel\ntime_series_transmission$California &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"CA\")]]$cdcTransmissionLevel\ntime_series_transmission$New_Jersey &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"NJ\")]]$cdcTransmissionLevel\ntime_series_transmission$Tennessee &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"TN\")]]$cdcTransmissionLevel\ntime_series_transmission$District_of_Columbia &lt;- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"DC\")]]$cdcTransmissionLevel\n print(head(time_series_transmission))\n\n# A tibble: 6 × 6\n  Date       Alaska California New_Jersey Tennessee District_of_Columbia\n  &lt;chr&gt;       &lt;int&gt;      &lt;int&gt;      &lt;int&gt;     &lt;int&gt;                &lt;int&gt;\n1 2020-03-01      0          0          0         0                    0\n2 2020-03-02      0          0          0         0                    0\n3 2020-03-03      0          0          0         0                    0\n4 2020-03-04      0          0          0         0                    0\n5 2020-03-05      0          0          0         0                    0\n6 2020-03-06      0          0          0         0                    0\n\n\n\n # New data-frame with dates\ntime_series_cases &lt;- list(Alaska = time_series %&gt;% filter(state==\"AK\") %&gt;% select(date,cases))\n# Cases of each state\ntime_series_cases$California &lt;- time_series %&gt;% filter(state==\"CA\") %&gt;% select(date,cases) \ntime_series_cases$New_Jersey &lt;- time_series %&gt;% filter(state==\"NJ\") %&gt;% select(date,cases) \ntime_series_cases$Tennessee &lt;- time_series %&gt;% filter(state==\"TN\") %&gt;% select(date,cases) \ntime_series_cases$District_of_Columbia &lt;- time_series %&gt;% filter(state==\"DC\") %&gt;% select(date,cases)\n\n\nggplot(data, aes(x=state,y=population)) + geom_bar(stat=\"identity\") +labs(x=\"States\",y=\"Population\") + theme_bw()"
  },
  {
    "objectID": "week11challenge.html",
    "href": "week11challenge.html",
    "title": "graph",
    "section": "",
    "text": "# Load the ggplot2 library\nlibrary(ggplot2)\n\n# Read the CSV file into a data frame\ndata &lt;- read.csv(\"/Users/iannnlee/Documents/GitHub/iannnlee.github.io/iannnlee.github.io/clean_data5.csv\")\n\n# Rename columns for better compatibility\ncolnames(data) &lt;- c(\"Year\", \"Single_30_39\", \"Non_Single_30_39\")\n\n# Reshape the data for better compatibility with ggplot2\nlibrary(tidyr)\ndata_long &lt;- gather(data, key = \"Status\", value = \"Percentage\", -Year)\n\n# Create a stacked bar graph using ggplot with specified colors\nggplot(data_long, aes(x = Year, y = Percentage, fill = Status)) +\n  geom_bar(stat = \"identity\", color = \"black\") +\n  labs(title = \"Stacked Bar Graph of 30-39 Years\", y = \"Percentage\", x = \"Year\") +\n  scale_fill_manual(values = c(\"Single\" = \"blue\", \"Non-Single\" = \"red\")) +\n  scale_x_continuous(breaks = unique(data$Year), labels = unique(data$Year)) +\n  theme_minimal()"
  },
  {
    "objectID": "documentation.html",
    "href": "documentation.html",
    "title": "documentation",
    "section": "",
    "text": "Welcome to my documentation!\nhttps://github.com/iannnlee/nm2207\n(placeholder) replace this link with my documentation\n(placeholder) graph 1 Age VS Relationship Status\n(placeholder) graph 2 Sex VS Relationship Status\n(placeholder) graph 3 Highest Qual Attained VS Relationship Status\nThis code: clean data 3, 10 year window 2013-2022 30-39 yr old\n\n\n\n\n\nThis code: clean data 4, 10 year window 2013-2022 40-49 yr old"
  }
]